datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  items     Item[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Item {
  id                String    @id @default(uuid())
  title             String
  description       String?
  price            Decimal   @default(0.00)
  condition        String?
  brand            String?
  model            String?
  imageUrls        String[]  // Array of image URLs
  detectionScore   Float?    // AI confidence score
  userId           String
  user             User      @relation(fields: [userId], references: [id])
  listings         Listing[]
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  
  // AI-related fields
  categoryConfidence Float?
  detectedCategory  String?
  detectedBrand     String?
  qualityScore      Float?   // Image quality assessment
  dimensions        Json?    // Detected item dimensions
  defects           Json?    // Detected defects or condition issues
}

model Listing {
  id                String              @id @default(uuid())
  itemId            String
  item              Item                @relation(fields: [itemId], references: [id])
  marketplace       String              // e.g., "ebay", "amazon"
  status            String?             // e.g., "active", "sold", "draft"
  externalId        String?             // ID on the marketplace platform
  price             Decimal             @default(0.00)
  marketResearch    MarketResearchData[]
  orders            Order[]
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  
  // Platform-specific data
  platformData      Json?               // Store platform-specific listing details
  performanceMetrics Json?              // Views, likes, engagement data
  analytics         AnalyticsData[]     // Relation to analytics data
}

model MarketResearchData {
  id                String    @id @default(uuid())
  listingId         String
  listing           Listing   @relation(fields: [listingId], references: [id])
  priceTrend        Json?     // Historical price data
  competitorPrices  Json?     // Current competitor pricing
  demandMetrics     Json?     // Search volume, seasonal trends
  recommendations   Json?     // AI-generated pricing recommendations
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
}

model Order {
  id                String    @id @default(uuid())
  listingId         String
  listing           Listing   @relation(fields: [listingId], references: [id])
  quantity          Int       @default(1)
  totalPrice        Decimal   @default(0.00)
  status            String    // e.g., "pending", "shipped", "delivered"
  buyerDetails      Json?     // Buyer information
  shipment          Shipment?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
}

model Shipment {
  id              String    @id @default(cuid())
  order           Order     @relation(fields: [orderId], references: [id])
  orderId         String    @unique  // One-to-one relationship with Order
  carrier         String    // e.g., "AUS_POST"
  trackingNumber  String?
  status          String    // e.g., "PENDING", "SHIPPED"
  
  // Australia Post size limits
  weight          Decimal?  // in kg, max 22kg for domestic
  length          Int?      // in cm, max 105cm
  volume          Decimal?  // in cubic metres, max 0.25
  
  // Cost optimization fields
  shippingCost    Decimal   @default(0.00)  // Final shipping cost
  quotedCosts     Json?     // All carrier quotes received
  selectedReason  String?   // Why this carrier was selected (e.g., "CHEAPEST", "ONLY_OPTION", "SIZE_LIMITS")
  
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

model AnalyticsData {
  id                String    @id @default(uuid())
  listingId         String
  listing           Listing   @relation(fields: [listingId], references: [id])
  viewCount         Int       @default(0)
  clickCount        Int       @default(0)
  conversionRate    Float?
  revenue           Decimal   @default(0.00)
  profitMargin      Float?
  platformMetrics   Json?     // Platform-specific performance data
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
}

model AnalyticsSnapshot {
  id                String    @id @default(uuid())
  date              DateTime  @default(now())
  totalRevenue      Decimal   @default(0.00)
  totalProfit       Decimal   @default(0.00)
  topCategories     Json?     // Best performing categories
  platformInsights  Json?     // Cross-platform performance comparison
  customerMetrics   Json?     // Aggregated customer behavior data
  createdAt         DateTime  @default(now())
}

model Conversation {
  id        Int      @id @default(autoincrement())
  userId    Int
  messages  Message[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Message {
  id              Int         @id @default(autoincrement())
  conversationId  Int
  conversation    Conversation @relation(fields: [conversationId], references: [id])
  content         String
  sender          String
  createdAt       DateTime    @default(now())
}
